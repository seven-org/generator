<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<#macro mapperEl value>${r"#{"}${value}}</#macro>
<mapper namespace="${basepackage}.base.dao.${className}Mapper">

	<select id="get" parameterType="String" resultType="${basepackage}.base.entity.${className}">
		SELECT
		<#list table.columns as column>
			${column.sqlName} ${column.columnNameLower}<#if column_has_next>,</#if>
		</#list>
			FROM ${table.sqlName}
			WHERE ${table.pkColumn} = <@mapperEl "${table.pkColumn.columnNameFirstLower}"/>
	</select>

	<select id="findList" parameterType="${basepackage}.base.entity.${className}" resultType="${basepackage}.base.entity.${className}">
		SELECT
		<#list table.columns as column>
			${column.sqlName} ${column.columnNameLower}<#if column_has_next>,</#if>
		</#list>
			FROM ${table.sqlName}
			WHERE 1 = 1
		<#list table.columns as column>
			<if test="${column.columnNameLower}!=null"> and ${column.sqlName} = <@mapperEl column.columnNameLower/></if>
		</#list>
	</select>

	<select id="findListByPage" parameterType="${basepackage}.base.entity.${className}" resultType="${basepackage}.base.entity.${className}">
		SELECT
		<#list table.columns as column>
			${column.sqlName} ${column.columnNameLower}<#if column_has_next>,</#if>
		</#list>
			FROM ${table.sqlName}
			WHERE 1 = 1
		<#list table.columns as column>
			<if test="${column.columnNameLower}!=null"> and ${column.sqlName} = <@mapperEl column.columnNameLower/></if>
		</#list>
	</select>

	<insert id="insert" parameterType="${basepackage}.base.entity.${className}">
		INSERT INTO ${table.sqlName} (
		<#list table.notPkColumns as column>
			<if test="${column.columnNameLower}!=null">${column.sqlName},</if>
		</#list>
		<#list table.compositeIdColumns as column>
			${column.sqlName}
		</#list>
			) VALUES (
		<#list table.notPkColumns as column>
			<if test="${column.columnNameLower}!=null"><@mapperEl column.columnNameFirstLower/>,</if>
		</#list>
		<#list table.compositeIdColumns as column>
			<@mapperEl column.columnNameFirstLower/>
		</#list>
		)
	</insert>

	<update id="update" parameterType="${basepackage}.base.entity.${className}">
		UPDATE ${table.sqlName} SET
		<#list table.notPkColumns as column>
			<if test="${column.columnNameLower}!=null">${column.sqlName} = <@mapperEl column.columnNameFirstLower/> ,</if>
		</#list>
		<#list table.compositeIdColumns as column>
			${column.sqlName} = <@mapperEl column.columnNameFirstLower/>
			</#list>
			WHERE
		<#list table.compositeIdColumns as column>
			${column.sqlName} = <@mapperEl column.columnNameFirstLower/>
		</#list>
	</update>
	
	<update id="delete" parameterType="String">
		DELETE FROM ${table.sqlName}  
		WHERE ${table.pkColumn} = <@mapperEl "${table.pkColumn.columnNameFirstLower}"/>
	</update>
	
</mapper>