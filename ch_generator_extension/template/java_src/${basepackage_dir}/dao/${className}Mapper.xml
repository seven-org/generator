<#include "/macro.include"/>
<#assign className = table.className>   
<#assign classNameFirstLower = table.classNameFirstLower>   
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<#macro mapperEl value>${r"#{"}${value}}</#macro>
<mapper namespace="${basepackage}.dao.${className}Mapper">

	<select id="get" parameterType="String" resultType="${basepackage}.entity.${className}">
		SELECT
		<#list table.columns as column>
			`${column.sqlName}` `${column.columnNameLower}`<#if column_has_next>,</#if>
		</#list>
			FROM `${table.sqlName}`
			WHERE `${table.pkColumn}` = <@mapperEl "${table.pkColumn.columnNameFirstLower}"/>
	</select>

	<select id="findList" parameterType="${basepackage}.entity.${className}" resultType="${basepackage}.entity.${className}">
		SELECT
		<#list table.columns as column>
			`${column.sqlName}` `${column.columnNameLower}`<#if column_has_next>,</#if>
		</#list>
			FROM `${table.sqlName}`
			WHERE 1 = 1
		<#list table.columns as column>
			<if test="${column.columnNameLower}!=null"> and `${column.sqlName}` = <@mapperEl column.columnNameLower/></if>
		</#list>
	</select>
	
	<select id="findListCount" parameterType="${basepackage}.entity.${className}">
		SELECT
			COUNT(7)
			FROM `${table.sqlName}`
			WHERE 1 = 1
		<#list table.columns as column>
			<if test="${column.columnNameLower}!=null"> and `${column.sqlName}` = <@mapperEl column.columnNameLower/></if>
		</#list>
	</select>

	<select id="findListByPage" parameterType="${basepackage}.entity.${className}" resultType="${basepackage}.entity.${className}">
		SELECT
		<#list table.columns as column>
			`${column.sqlName}` `${column.columnNameLower}`<#if column_has_next>,</#if>
		</#list>
			FROM `${table.sqlName}`
			WHERE 1 = 1
		<#list table.columns as column>
			<if test="${column.columnNameLower}!=null"> and `${column.sqlName}` = <@mapperEl column.columnNameLower/></if>
		</#list>
	</select>

	<insert id="insert" parameterType="${basepackage}.entity.${className}">
		INSERT INTO `${table.sqlName}` (
		<#list table.notPkColumns as column>
			<if test="${column.columnNameLower}!=null">`${column.sqlName}`,</if>
		</#list>
		<#list table.compositeIdColumns as column>
			`${column.sqlName}`
		</#list>
			) VALUES (
		<#list table.notPkColumns as column>
			<if test="${column.columnNameLower}!=null"><@mapperEl column.columnNameFirstLower/>,</if>
		</#list>
		<#list table.compositeIdColumns as column>
			<@mapperEl column.columnNameFirstLower/>
		</#list>
		)
	</insert>
	
	<insert id="insertMultiple" parameterType="java.util.List">
	    insert into `${table.sqlName}` (
	    <#list table.notPkColumns as column>
			`${column.sqlName}`,
		</#list>
		<#list table.compositeIdColumns as column>
			`${column.sqlName}`
		</#list>
	    	) VALUES
	    <foreach collection="list" item="item" index="index" separator="," >
	        (
	        <#list table.notPkColumns as column>
				<@mapperEl "item." + column.columnNameFirstLower/>,
			</#list>
			<#list table.compositeIdColumns as column>
				<@mapperEl "item." + column.columnNameFirstLower/>
			</#list>
	        )
	    </foreach>
	</insert>

	<update id="update" parameterType="${basepackage}.entity.${className}">
		UPDATE `${table.sqlName}` SET
		<#list table.notPkColumns as column>
			<if test="${column.columnNameLower}!=null">`${column.sqlName}` = <@mapperEl column.columnNameFirstLower/> ,</if>
		</#list>
		<#list table.compositeIdColumns as column>
			`${column.sqlName}` = <@mapperEl column.columnNameFirstLower/>
			</#list>
			WHERE
		<#list table.compositeIdColumns as column>
			`${column.sqlName}` = <@mapperEl column.columnNameFirstLower/>
		</#list>
	</update>
	
	<update id="updateMultiple" parameterType="java.util.List">  
	    <foreach collection="list" item="item" index="index" open="" close="" separator=";">
	        UPDATE `${table.sqlName}` SET
			<#list table.notPkColumns as column>
				`${column.sqlName}` = <@mapperEl "item." + column.columnNameFirstLower/> ,
			</#list>
			<#list table.compositeIdColumns as column>
				`${column.sqlName}` = <@mapperEl "item." + column.columnNameFirstLower/>
				</#list>
				WHERE
			<#list table.compositeIdColumns as column>
				`${column.sqlName}` = <@mapperEl "item." + column.columnNameFirstLower/>
			</#list>
	    </foreach>
	</update>
	
	<update id="delete" parameterType="String">
		DELETE FROM `${table.sqlName}`  
		WHERE `${table.pkColumn}` = <@mapperEl "${table.pkColumn.columnNameFirstLower}"/>
	</update>
	
</mapper>